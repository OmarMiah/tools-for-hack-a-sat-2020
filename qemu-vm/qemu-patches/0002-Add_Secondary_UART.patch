From 0d61026917c3af7c517127078249ddeb56225f80 Mon Sep 17 00:00:00 2001
From: Solar Wine Team <solarwine@gmail.com>
Date: Mon, 13 Jul 2020 10:24:15 +0200
Subject: [PATCH] Add some UARTs

    Add debug UART as primary console:
      Make serial0 = /dev/console and serial1 = /dev/console_b (radio comm).
      This way, the console follows the PROM messages

    Add another UART for C&DH board with ATmega128 (ADCS & EPS comm).
---
 qemu-leon3/qemu-4.1.0/hw/sparc/leon3.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/qemu-4.1.0/hw/sparc/leon3.c b/qemu-leon3/qemu-4.1.0/hw/sparc/leon3.c
index 19cedebd..181d02e6 100644
--- a/qemu-4.1.0/hw/sparc/leon3.c
+++ b/qemu-4.1.0/hw/sparc/leon3.c
@@ -53,6 +53,14 @@
 #define LEON3_UART_OFFSET  (0x80000100)
 #define LEON3_UART_IRQ     (3)
 
+/* Serial debug communication link */
+#define LEON3_UARTB_OFFSET  (0x80000700)
+#define LEON3_UARTB_IRQ     (7)
+
+/* Secondary UART */
+#define LEON3_UARTC_OFFSET  (0x80000900)
+#define LEON3_UARTC_IRQ     (8)
+
 #define LEON3_IRQMP_OFFSET (0x80000200)
 
 #define LEON3_TIMER_OFFSET (0x80000300)
@@ -331,6 +339,16 @@ static void leon3_generic_hw_init(MachineState *machine)
                             0, LEON3_TIMER_IRQ, GRLIB_APBIO_AREA);
 
     /* Allocate uart */
+    if (serial_hd(1)) {
+        dev = qdev_create(NULL, TYPE_GRLIB_APB_UART);
+        qdev_prop_set_chr(dev, "chrdev", serial_hd(1));
+        qdev_init_nofail(dev);
+        sysbus_mmio_map(SYS_BUS_DEVICE(dev), 0, LEON3_UARTB_OFFSET);
+        sysbus_connect_irq(SYS_BUS_DEVICE(dev), 0, cpu_irqs[LEON3_UARTB_IRQ]);
+        grlib_apb_pnp_add_entry(apb_pnp, LEON3_UARTB_OFFSET, 0xFFF,
+                                GRLIB_VENDOR_GAISLER, GRLIB_APBUART_DEV, 1,
+                                LEON3_UARTB_IRQ, GRLIB_APBIO_AREA);
+    }
     if (serial_hd(0)) {
         dev = qdev_create(NULL, TYPE_GRLIB_APB_UART);
         qdev_prop_set_chr(dev, "chrdev", serial_hd(0));
@@ -341,6 +359,16 @@ static void leon3_generic_hw_init(MachineState *machine)
                                 GRLIB_VENDOR_GAISLER, GRLIB_APBUART_DEV, 1,
                                 LEON3_UART_IRQ, GRLIB_APBIO_AREA);
     }
+    if (serial_hd(2)) {
+        dev = qdev_create(NULL, TYPE_GRLIB_APB_UART);
+        qdev_prop_set_chr(dev, "chrdev", serial_hd(2));
+        qdev_init_nofail(dev);
+        sysbus_mmio_map(SYS_BUS_DEVICE(dev), 0, LEON3_UARTC_OFFSET);
+        sysbus_connect_irq(SYS_BUS_DEVICE(dev), 0, cpu_irqs[LEON3_UARTC_IRQ]);
+        grlib_apb_pnp_add_entry(apb_pnp, LEON3_UARTC_OFFSET, 0xFFF,
+                                GRLIB_VENDOR_GAISLER, GRLIB_APBUART_DEV, 1,
+                                LEON3_UARTC_IRQ, GRLIB_APBIO_AREA);
+    }
 }
 
 static void leon3_generic_machine_init(MachineClass *mc)
-- 
2.17.1

